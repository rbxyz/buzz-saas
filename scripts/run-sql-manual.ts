import { db } from "../src/server/db";
import { sql } from "drizzle-orm";
import fs from "fs";
import path from "path";

async function runManualSQL() {
    try {
        console.log("üöÄ Executando SQL manual para criar tabelas...");

        // Ler o arquivo SQL
        const sqlPath = path.join(__dirname, "create-tables-manual.sql");
        const sqlContent = fs.readFileSync(sqlPath, "utf8");

        // Executar o SQL
        await db.execute(sql.raw(sqlContent));

        console.log("‚úÖ Tabelas criadas com sucesso!");

        // Agora popular os planos
        console.log("üöÄ Populando planos iniciais...");

        // Plano Starter
        await db.execute(sql`
      INSERT INTO plans (name, type, price, features, limits, is_active)
      VALUES (
        'Starter',
        'starter'::plan_type_enum,
        29.90,
        '["At√© 30 agendamentos por m√™s", "An√°lise de desempenho b√°sica", "M√©tricas b√°sicas", "Agendamentos recentes", "Gest√£o de clientes", "Servi√ßos ilimitados"]'::jsonb,
        '{"monthlyBookings": 30, "maxUsers": 1, "whatsappIntegration": false, "advancedAnalytics": false, "customTheme": false}'::jsonb,
        true
      )
      ON CONFLICT (type) DO UPDATE SET
        name = EXCLUDED.name,
        price = EXCLUDED.price,
        features = EXCLUDED.features,
        limits = EXCLUDED.limits,
        updated_at = NOW()
    `);

        console.log("‚úÖ Plano Starter criado/atualizado");

        // Plano Pro
        await db.execute(sql`
      INSERT INTO plans (name, type, price, features, limits, is_active)
      VALUES (
        'Pro',
        'pro'::plan_type_enum,
        79.90,
        '["Agendamentos ilimitados", "Integra√ß√£o WhatsApp", "An√°lises aprofundadas", "M√©tricas de crescimento", "Relat√≥rios avan√ßados", "Configura√ß√£o de tema", "Gerenciamento de usu√°rios", "Usu√°rios ilimitados", "Suporte priorit√°rio", "Backup autom√°tico"]'::jsonb,
        '{"monthlyBookings": -1, "maxUsers": -1, "whatsappIntegration": true, "advancedAnalytics": true, "customTheme": true}'::jsonb,
        true
      )
      ON CONFLICT (type) DO UPDATE SET
        name = EXCLUDED.name,
        price = EXCLUDED.price,
        features = EXCLUDED.features,
        limits = EXCLUDED.limits,
        updated_at = NOW()
    `);

        console.log("‚úÖ Plano Pro criado/atualizado");

        console.log("üéâ Setup do sistema de planos conclu√≠do com sucesso!");
        process.exit(0);

    } catch (error) {
        console.error("‚ùå Erro ao executar setup:", error);
        process.exit(1);
    }
}

runManualSQL(); 